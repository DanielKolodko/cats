name: Cleanup Docker Images and Helm Charts

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Debug: Print the service account email from the GCP credentials (remove after debugging)
      - name: Print Service Account Email
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "Service Account Email:"
          cat $GOOGLE_APPLICATION_CREDENTIALS | jq -r '.client_email'

      # Docker Cleanup (unchanged)
      - name: Cleanup Old Docker Images
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          REPO="cat-gifs-app"
          BASE_URL="https://hub.docker.com/v2/repositories/${DOCKERHUB_USERNAME}/${REPO}/tags"
          echo "Fetching tags from Docker Hub for repository ${DOCKERHUB_USERNAME}/${REPO}..."
          TAGS=$(curl -s -H "Authorization: JWT ${DOCKERHUB_TOKEN}" "${BASE_URL}/?page_size=100" | jq -r '.results // [] | .[] | "\(.name) \(.last_updated)"')
          if [ -z "$TAGS" ]; then
            echo "No tags found for repository ${DOCKERHUB_USERNAME}/${REPO}."
            exit 0
          fi
          NOW=$(date +%s)
          THIRTY_DAYS=$((30*24*3600))
          echo "Current time (epoch): $NOW"
          echo "$TAGS" | while read -r line; do
            TAG=$(echo "$line" | awk '{print $1}')
            UPDATED=$(echo "$line" | awk '{print $2}')
            UPDATED_SECONDS=$(date -d "$UPDATED" +%s)
            AGE=$((NOW - UPDATED_SECONDS))
            if [ $AGE -gt $THIRTY_DAYS ]; then
              echo "Deleting tag '$TAG' (last updated: $UPDATED)"
              curl -s -X DELETE -H "Authorization: JWT ${DOCKERHUB_TOKEN}" "${BASE_URL}/${TAG}/"
            else
              echo "Keeping tag '$TAG' (last updated: $UPDATED)"
            fi
          done

      # Helm Chart Cleanup from GitHub Pages repo (gh-pages branch)
      - name: Checkout Helm Repo gh-pages
        uses: actions/checkout@v2
        with:
          repository: DanielKolodko/helm
          ref: gh-pages
          token: ${{ secrets.HELM_GITHUB_TOKEN }}
          path: helm-gh-pages

      - name: Cleanup Old Helm Charts in gh-pages
        working-directory: helm-gh-pages
        run: |
          NOW=$(date +%s)
          THIRTY_DAYS=$((30*24*3600))
          for file in *.tgz; do
            if [ -f "$file" ]; then
              # Get the commit timestamp for the file (epoch seconds)
              COMMIT_DATE=$(git log -1 --format=%ct "$file")
              AGE=$((NOW - COMMIT_DATE))
              if [ $AGE -gt $THIRTY_DAYS ]; then
                  echo "Deleting $file (commit timestamp: $COMMIT_DATE, age: $AGE seconds)"
                  git rm "$file"
                  rm "$file"
              else
                  echo "Keeping $file (commit timestamp: $COMMIT_DATE, age: $AGE seconds)"
              fi
            fi
          done

      - name: Update Helm Repository Index in gh-pages
        working-directory: helm-gh-pages
        run: |
          helm repo index . --url https://danielkolodko.github.io/helm
          ls -l

      - name: Commit and Push to gh-pages
        working-directory: helm-gh-pages
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Clean up old Helm chart packages" || echo "No changes to commit"
          git push
