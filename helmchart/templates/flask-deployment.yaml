apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helmchart.fullname" . }}-flask-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "helmchart.name" . }}-flask
  template:
    metadata:
      labels:
        app: {{ include "helmchart.name" . }}-flask
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: flask-app
        image: "{{ .Values.image.flask.repository }}:{{ .Values.image.flask.tag }}"
        ports:
          - containerPort: {{ .Values.service.flask.targetPort }}
        env:
          - name: FLASK_APP
            valueFrom:
              configMapKeyRef:
                name: {{ include "helmchart.fullname" . }}-flask-config
                key: FLASK_APP
          - name: FLASK_ENV
            valueFrom:
              configMapKeyRef:
                name: {{ include "helmchart.fullname" . }}-flask-config
                key: FLASK_ENV
          - name: SQLALCHEMY_DATABASE_URI
            value: "mysql+pymysql://{{ .Values.mysql.user }}:{{ .Values.mysql.password }}@{{ include "helmchart.mysqlService" . }}/{{ .Values.mysql.database }}"
      imagePullSecrets:
        - name: regcred
